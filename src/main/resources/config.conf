net {
  type = mainnet
  # type = testnet
}

storage {
  # Directory for storing persistent data
  db.version = 2,
  db.directory = "database",
  index.directory = "index",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    //    {
    //      name = "account",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
    //    {
    //      name = "account-index",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
  ]


  needToUpdateAsset = true

}

node.discovery = {
  enable = true
  persist = true
  bind.ip = ""
  external.ip = null
}

node.backup {
  port = 10001

  # my priority, each member should use different priority
  priority = 8

  # peer's ip list, can't contain mine
  members = [
    # "ip",
    # "ip"
  ]
}

node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:50051"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 18899

  connection.timeout = 2

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  connectFactor = 0.3
  activeConnectFactor = 0.1

  maxActiveNodes = 30

  maxActiveNodesWithSameIp = 2

  minParticipationRate = 0

  # check the peer data transfer ,disconnect factor
  disconnectNumberFactor = 0.4
  maxConnectNumberFactor = 0.8
  receiveTcpMinDataLength = 2048
  isOpenFullTcpDisconnect = true

  p2p {
    version = 32 # 11111: mainnet; 20180622: testnet
  }

  active = [
    # Active establish connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  passive = [
    # Passive accept connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  http {
    fullNodePort = 8098
    solidityPort = 8099
  }

  rpc {
    port = 50059
    #solidityPort = 50061
    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =
  }

  # Limits the maximum percentage (default 75%) of producing block interval
  # to provide sufficient time to perform other operations e.g. broadcast block
  # blockProducedTimeOut = 75

  # Limits the maximum number (default 700) of transaction from network layer
  # netMaxTrxPerSecond = 700
}



seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
    "127.0.0.1:18898"
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Zion"
      accountType = "AssetIssue"
      #address = "27WuXYGzxHXU7ynKDzoudJd9mS9Bw4vmbER"
      #address = "THph9K2M2nLvkianrMGswRhz5hjSA9fuH7"

      #455a5552a569b679ec995a44cb8bded48f3fc0e287fbd94cfc07198b93ce5382
      address = TSaRtCNG4qhNTWy3SrPC7hkdr6iPFhBVjE
      balance = "25000000000000000"
    },

    # the account of payment
    {
      accountName = "Sun"
      accountType = "AssetIssue"
      #address = "27Vm12vh5Mm9HzPSWBDvbZu1U25xvyFvexF"
      #address = "TV75jZpdmP2juMe1dRwGrwpV6AMU6mr1EU"

      #96bc529e04b512c5c1f47ea98a8da6a5031f24d80bd2877d31b94983283fe91a
      address = TZ6ha892WZJaPvWtvQ2ksWrNigguqptMn6
      balance = "10000000000000000"
    },

    # the account of coin burn
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      #address = "27WnTihwXsqCqpiNedWvtKCZHsLg5LjQ4XD"
      #address = "TKVyqEJaq8QRPQfWE8s8WPb5c92kanAdLo"

      #a294c40b016b854d42604daccae55d761504466fe9f97e961b6d9a9a32b19ee8
      address = TS9Qi4FcPXKaf8AAVMVE8CyYUgQ93QrCj3
      balance = "-9223372036854775808"
    },

    {
      accountName = "Send"
      accountType = "AssetIssue"
      #address = "27meR2d4HodFPYX2V8YRDrLuFpYdbLvBEWi"
      #address = "TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy"

      #549c7797b351e48ab1c6bb5857138b418012d97526fc2acba022357d49c93ac0
      address = TDZdB4ogHSgU1CGrun8WXaMb2QDDkvAKQm
      balance = "25000000000000000"
    },
    {
      accountName = "Receive"
      accountType = "AssetIssue"
      #address = "27ZESitosJfKouTBrGg6Nk5yEjnJHXMbkZp"
      #address = "THmtHi1Rzq4gSKYGEKv1DPkV7au6xU1AUB"

      #1427022727dbcc5b9010e92881e02d63ea1088bfb6938bde79b8a0e1bfe8f855
      address = TA6xZKgWcwF8ZcMoAXNcyMn6UAUB1yiyHH
      balance = "0"
    },
    {
      accountName = "Witness1"
      accountType = "AssetIssue"
      #address = "27ZESitosJfKouTBrGg6Nk5yEjnJHXMbkZp"
      #address = "THmtHi1Rzq4gSKYGEKv1DPkV7au6xU1AUB"

      #1427022727dbcc5b9010e92881e02d63ea1088bfb6938bde79b8a0e1bfe8f855
      address = TXtrbmfwZ2LxtoCveEhZT86fTss1w8rwJE
      balance = "25000000000000000"
    }
  ]

  witnesses = [
    {
      #address: 27QAUYjg5FXfxcvyHcWF3Aokd5eu9iYgs1c
      #address: TB4B1RMhoPeivkj4Hebm6tttHjRY9yQFes
      url = "http://Mercury.org",

      #0528dc17428585fc4dece68b79fa7912270a1fe8e85f244372f59eb7e8925e04
      address: TXtrbmfwZ2LxtoCveEhZT86fTss1w8rwJE
      voteCount = 105
    }
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
}

localwitness = [
]

#localwitnesskeystore = [
#  "localwitnesskeystore.json"
#]

block = {
  needSyncCheck = true
  maintenanceTimeInterval = 300000 // 1 day: 86400000(ms), 6 hours: 21600000(ms)
  proposalExpireTime = 300000
  checkFrozenTime = 0
}

# Transaction reference block, default is "head", configure to "solid" can avoid TaPos error
# trx.reference.block = "head" // head;solid;

vm = {
  supportConstant = true
}
vm = {
  supportConstant = true
  minTimeRatio = 0.0
  maxTimeRatio = 10.0
}

committee = {
  allowAdaptiveEnergy = 0
  allowCreationOfContracts = 1  //mainnet:0 (reset by committee),test:1
  allowDelegateResource = 1
  allowSameTokenName = 1
  allowTvmTransferTrc10 = 1
}

log.level = {
  root = "INFO" // TRACE;DEBUG;INFO;WARN;ERROR
}